# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.db import models


class AuthGroup(models.Model):
    name = models.CharField(unique=True, max_length=150)

    class Meta:
        managed = False
        db_table = 'auth_group'


class AuthGroupPermissions(models.Model):
    group = models.ForeignKey(AuthGroup, models.DO_NOTHING)
    permission = models.ForeignKey('AuthPermission', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_group_permissions'
        unique_together = (('group', 'permission'),)


class AuthPermission(models.Model):
    name = models.CharField(max_length=255)
    content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING)
    codename = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'auth_permission'
        unique_together = (('content_type', 'codename'),)


class AuthUser(models.Model):
    password = models.CharField(max_length=128)
    last_login = models.DateTimeField(blank=True, null=True)
    is_superuser = models.IntegerField()
    username = models.CharField(unique=True, max_length=150)
    first_name = models.CharField(max_length=30)
    last_name = models.CharField(max_length=150)
    email = models.CharField(max_length=254)
    is_staff = models.IntegerField()
    is_active = models.IntegerField()
    date_joined = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'auth_user'


class AuthUserGroups(models.Model):
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    group = models.ForeignKey(AuthGroup, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_user_groups'
        unique_together = (('user', 'group'),)


class AuthUserUserPermissions(models.Model):
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    permission = models.ForeignKey(AuthPermission, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_user_user_permissions'
        unique_together = (('user', 'permission'),)


class Branch(models.Model):
    br_id = models.AutoField(db_column='BR_ID', primary_key=True)  # Field name made lowercase.
    br_address = models.CharField(db_column='BR_ADDRESS', max_length=60, blank=True, null=True)  # Field name made lowercase.
    br_phone_num = models.CharField(db_column='BR_PHONE_NUM', max_length=20, blank=True, null=True)  # Field name made lowercase.
    ma = models.ForeignKey('Manager', models.DO_NOTHING, db_column='MA_ID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'branch'


class Customer(models.Model):
    cu_id = models.AutoField(db_column='CU_ID', primary_key=True)  # Field name made lowercase.
    cu_first_name = models.CharField(db_column='CU_FIRST_NAME', max_length=20, blank=True, null=True)  # Field name made lowercase.
    cu_last_name = models.CharField(db_column='CU_LAST_NAME', max_length=20, blank=True, null=True)  # Field name made lowercase.
    cu_phone_num = models.CharField(db_column='CU_PHONE_NUM', max_length=20, blank=True, null=True)  # Field name made lowercase.
    cu_address = models.CharField(db_column='CU_ADDRESS', max_length=60, blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'customer'


class DjangoAdminLog(models.Model):
    action_time = models.DateTimeField()
    object_id = models.TextField(blank=True, null=True)
    object_repr = models.CharField(max_length=200)
    action_flag = models.PositiveSmallIntegerField()
    change_message = models.TextField()
    content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING, blank=True, null=True)
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'django_admin_log'


class DjangoContentType(models.Model):
    app_label = models.CharField(max_length=100)
    model = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'django_content_type'
        unique_together = (('app_label', 'model'),)


class DjangoMigrations(models.Model):
    app = models.CharField(max_length=255)
    name = models.CharField(max_length=255)
    applied = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_migrations'


class DjangoSession(models.Model):
    session_key = models.CharField(primary_key=True, max_length=40)
    session_data = models.TextField()
    expire_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_session'


class Employee(models.Model):
    em_id = models.AutoField(db_column='EM_ID', primary_key=True)  # Field name made lowercase.
    em_first_name = models.CharField(db_column='EM_FIRST_NAME', max_length=20, blank=True, null=True)  # Field name made lowercase.
    em_last_name = models.CharField(db_column='EM_LAST_NAME', max_length=20, blank=True, null=True)  # Field name made lowercase.
    em_pay_rate = models.DecimalField(db_column='EM_PAY_RATE', max_digits=5, decimal_places=2, blank=True, null=True)  # Field name made lowercase.
    em_phone_num = models.CharField(db_column='EM_PHONE_NUM', max_length=20, blank=True, null=True)  # Field name made lowercase.
    em_dob = models.DateField(db_column='EM_DOB', blank=True, null=True)  # Field name made lowercase.
    em_ss_num = models.CharField(db_column='EM_SS_NUM', max_length=20, blank=True, null=True)  # Field name made lowercase.
    em_address = models.CharField(db_column='EM_ADDRESS', max_length=40, blank=True, null=True)  # Field name made lowercase.
    br = models.ForeignKey(Branch, models.DO_NOTHING, db_column='BR_ID')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'employee'


class Manager(models.Model):
    ma_id = models.AutoField(db_column='MA_ID', primary_key=True)  # Field name made lowercase.
    em = models.ForeignKey(Employee, models.DO_NOTHING, db_column='EM_ID')  # Field name made lowercase.
    br = models.ForeignKey(Branch, models.DO_NOTHING, db_column='BR_ID')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'manager'


class PurchaseHist(models.Model):
    ph_id = models.AutoField(db_column='PH_ID', primary_key=True)  # Field name made lowercase.
    ph_date = models.DateField(db_column='PH_DATE', blank=True, null=True)  # Field name made lowercase.
    vg = models.ForeignKey('VideoGame', models.DO_NOTHING, db_column='VG_ID')  # Field name made lowercase.
    br = models.ForeignKey(Branch, models.DO_NOTHING, db_column='BR_ID')  # Field name made lowercase.
    num_purchased = models.IntegerField(db_column='NUM_PURCHASED', blank=True, null=True)  # Field name made lowercase.
    ind_cost = models.DecimalField(db_column='IND_COST', max_digits=5, decimal_places=2, blank=True, null=True)  # Field name made lowercase.
    tot_cost = models.DecimalField(db_column='TOT_COST', max_digits=7, decimal_places=2, blank=True, null=True)  # Field name made lowercase.
    ve = models.ForeignKey('Vendor', models.DO_NOTHING, db_column='VE_ID')  # Field name made lowercase.
    ma = models.ForeignKey(Manager, models.DO_NOTHING, db_column='MA_ID')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'purchase_hist'


class Rental(models.Model):
    re_id = models.AutoField(db_column='RE_ID', primary_key=True)  # Field name made lowercase.
    re_date = models.DateField(db_column='RE_DATE')  # Field name made lowercase.
    vg = models.ForeignKey('VideoGame', models.DO_NOTHING, db_column='VG_ID')  # Field name made lowercase.
    em = models.ForeignKey(Employee, models.DO_NOTHING, db_column='EM_ID')  # Field name made lowercase.
    br = models.ForeignKey(Branch, models.DO_NOTHING, db_column='BR_ID')  # Field name made lowercase.
    cu = models.ForeignKey(Customer, models.DO_NOTHING, db_column='CU_ID')  # Field name made lowercase.
    due_date = models.DateField(db_column='DUE_DATE')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'rental'


class RentalHist(models.Model):
    rh_id = models.AutoField(db_column='RH_ID', primary_key=True)  # Field name made lowercase.
    rh_date = models.DateField(db_column='RH_DATE', blank=True, null=True)  # Field name made lowercase.
    vg = models.ForeignKey('VideoGame', models.DO_NOTHING, db_column='VG_ID')  # Field name made lowercase.
    cu = models.ForeignKey(Customer, models.DO_NOTHING, db_column='CU_ID')  # Field name made lowercase.
    em = models.ForeignKey(Employee, models.DO_NOTHING, db_column='EM_ID')  # Field name made lowercase.
    br = models.ForeignKey(Branch, models.DO_NOTHING, db_column='BR_ID')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'rental_hist'


class Vendor(models.Model):
    ve_id = models.AutoField(db_column='VE_ID', primary_key=True)  # Field name made lowercase.
    ve_name = models.CharField(db_column='VE_NAME', max_length=40, blank=True, null=True)  # Field name made lowercase.
    ve_phone_num = models.CharField(db_column='VE_PHONE_NUM', max_length=20, blank=True, null=True)  # Field name made lowercase.
    ve_address = models.CharField(db_column='VE_ADDRESS', max_length=60, blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'vendor'


class VideoGame(models.Model):
    vg_id = models.AutoField(db_column='VG_ID', primary_key=True)  # Field name made lowercase.
    vg_name = models.CharField(db_column='VG_NAME', max_length=40, blank=True, null=True)  # Field name made lowercase.
    vg_genre = models.CharField(db_column='VG_GENRE', max_length=20, blank=True, null=True)  # Field name made lowercase.
    vg_publisher = models.CharField(db_column='VG_PUBLISHER', max_length=40, blank=True, null=True)  # Field name made lowercase.
    vg_copies_owned = models.IntegerField(db_column='VG_COPIES_OWNED', blank=True, null=True)  # Field name made lowercase.
    vg_copies_rented = models.IntegerField(db_column='VG_COPIES_RENTED', blank=True, null=True)  # Field name made lowercase.
    br = models.ForeignKey(Branch, models.DO_NOTHING, db_column='BR_ID')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'video_game'
